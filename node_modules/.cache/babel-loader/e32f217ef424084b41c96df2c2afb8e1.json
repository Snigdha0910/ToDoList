{"ast":null,"code":"var _jsxFileName = \"/Users/amoghbabbar/dummy/src/Todo/TodoForm.js\";\nimport React, { useState, useRef } from 'react';\n\nfunction TodoForm(props) {\n  const [todo, settodo] = useState('');\n  const textInput = useRef();\n\n  function handleChange(e) {\n    settodo(e.target.value);\n  }\n\n  function addToList(e) {\n    e.preventDefault();\n\n    if (textInput.current.value.trim() !== '') {\n      props.onAdd(todo);\n      settodo('');\n      textInput.current.focus();\n    } else {\n      textInput.current.focus();\n    }\n  }\n\n  function showResults(value) {\n    return props.filter[0] === value ? 'btn-primary' : 'default';\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xs-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: addToList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"\",\n    type: \"text\",\n    ref: textInput,\n    value: todo,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"Add\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xs-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"nav nav-pills\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: `btn ${showResults('all')}`,\n    value: \"all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, \"All\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: `btn ${showResults('false')}`,\n    value: \"false\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, \"Incomplete\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: `btn ${showResults('true')}`,\n    value: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, \"Completed\"))))));\n}\n\nexport default TodoForm;","map":{"version":3,"sources":["/Users/amoghbabbar/dummy/src/Todo/TodoForm.js"],"names":["React","useState","useRef","TodoForm","props","todo","settodo","textInput","handleChange","e","target","value","addToList","preventDefault","current","trim","onAdd","focus","showResults","filter"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,MAAzB,QAAuC,OAAvC;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAeL,QAAQ,CAAC,EAAD,CAA7B;AACA,QAAMM,SAAS,GAAGL,MAAM,EAAxB;;AAEA,WAASM,YAAT,CAAsBC,CAAtB,EAAwB;AACpBH,IAAAA,OAAO,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACH;;AAED,WAASC,SAAT,CAAmBH,CAAnB,EAAqB;AACjBA,IAAAA,CAAC,CAACI,cAAF;;AACA,QAAGN,SAAS,CAACO,OAAV,CAAkBH,KAAlB,CAAwBI,IAAxB,OAAiC,EAApC,EACA;AACAX,MAAAA,KAAK,CAACY,KAAN,CAAYX,IAAZ;AACAC,MAAAA,OAAO,CAAC,EAAD,CAAP;AACAC,MAAAA,SAAS,CAACO,OAAV,CAAkBG,KAAlB;AACC,KALD,MAMI;AACAV,MAAAA,SAAS,CAACO,OAAV,CAAkBG,KAAlB;AACH;AACJ;;AAED,WAASC,WAAT,CAAqBP,KAArB,EAA2B;AACvB,WAASP,KAAK,CAACe,MAAN,CAAa,CAAb,MAAkBR,KAAnB,GAA2B,aAA3B,GAAyC,SAAjD;AACH;;AAIH,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACK;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACL;AAAM,IAAA,QAAQ,EAAEC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,SAAS,EAAC,EAAjB;AAAoB,IAAA,IAAI,EAAC,MAAzB;AAAgC,IAAA,GAAG,EAAEL,SAArC;AAAgD,IAAA,KAAK,EAAEF,IAAvD;AAA6D,IAAA,QAAQ,EAAEG,YAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAQ,IAAA,SAAS,EAAC,iBAAlB;AAAoC,IAAA,IAAI,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFJ,CADK,CADJ,eAOD;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAI;AAAQ,IAAA,SAAS,EAAG,OAAMU,WAAW,CAAC,KAAD,CAAQ,EAA7C;AAAgD,IAAA,KAAK,EAAC,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAJ,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAI;AAAS,IAAA,SAAS,EAAG,OAAMA,WAAW,CAAC,OAAD,CAAU,EAAhD;AAAmD,IAAA,KAAK,EAAC,OAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAJ,CAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAI;AAAS,IAAA,SAAS,EAAG,OAAMA,WAAW,CAAC,MAAD,CAAS,EAA/C;AAAiD,IAAA,KAAK,EAAC,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAJ,CAJJ,CADJ,CAPC,CADL,CADF;AAqBD;;AAED,eAAef,QAAf","sourcesContent":["import React, { useState,useRef } from 'react';\n\nfunction TodoForm(props) {\n    const [todo,settodo]=useState('');\n    const textInput = useRef();\n    \n    function handleChange(e){\n        settodo(e.target.value);\n    }\n\n    function addToList(e){\n        e.preventDefault();\n        if(textInput.current.value.trim()!=='')\n        {\n        props.onAdd(todo);\n        settodo('');\n        textInput.current.focus();\n        }\n        else{\n            textInput.current.focus();\n        }\n    }\n\n    function showResults(value){\n        return ((props.filter[0]===value) ?'btn-primary':'default');\n    }\n\n\n    \n  return (\n    <div>\n         <div className=\"row\">\n             <div className='col-xs-6'>\n        <form onSubmit={addToList}> \n            <input className='' type='text' ref={textInput} value={todo} onChange={handleChange}></input>\n            <button className='btn btn-primary' type='submit'>Add</button>        \n        </form>\n        </div>\n        <div className=\"col-xs-5\">\n            <ul className=\"nav nav-pills\">\n                              \n                <li><button className={`btn ${showResults('all')}`} value='all'>All</button></li>\n                <li><button  className={`btn ${showResults('false')}`} value=\"false\">Incomplete</button></li>\n                <li><button  className={`btn ${showResults('true')}`}value=\"true\">Completed</button></li>\n\n                        </ul>\n                    </div>\n        </div>\n    </div>\n  );\n}\n\nexport default TodoForm;"]},"metadata":{},"sourceType":"module"}