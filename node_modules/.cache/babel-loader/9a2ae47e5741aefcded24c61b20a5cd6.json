{"ast":null,"code":"var _jsxFileName = \"/Users/amoghbabbar/dummy/src/Todo/TodoList.js\";\nimport React, { useState } from 'react';\n\nfunction TodoList(props) {\n  /*  const [input,changeInput]=useState();\n   \n   function changeEditMode(i,item){\n       changeInput(item);\n       props.changeEditMode(i);\n   }\n    function removeItem(i){\n       props.removeItem(i);\n   }\n    function handleChange(e,i){\n       var target= e.target;\n       target.name === 'isComplete'? props.changeDoneStatus(target.checked,i) : changeInput(target.value);\n   }\n    function updateIteminState(i){\n       props.updateIteminState(input,i);\n   }\n    var markDone; */\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, props.list.map((item, index) => {\n    {\n      markDone = props.list[index].isComplete ? 'line-through' : 'none';\n    }\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 33\n      }\n    }, props.list[index].isEditable ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        float: 'left'\n      },\n      value: input,\n      onChange: e => handleChange(e, index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        float: 'left'\n      },\n      onClick: () => changeEditMode(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 37\n      }\n    }, \"X\"), /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        float: 'left'\n      },\n      onClick: () => updateIteminState(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 37\n      }\n    }, \"OK\")) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        float: 'left'\n      },\n      name: \"isComplete\",\n      type: \"checkbox\",\n      onChange: e => handleChange(e, index),\n      defaultChecked: props.list[index].isComplete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        float: 'left',\n        textDecoration: markDone\n      },\n      onClick: () => changeEditMode(index, props.list[index].item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 37\n      }\n    }, props.list[index].item), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-danger \",\n      onClick: () => removeItem(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 37\n      }\n    }, \"Delete\"))));\n  })));\n}\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/amoghbabbar/dummy/src/Todo/TodoList.js"],"names":["React","useState","TodoList","props","list","map","item","index","markDone","isComplete","isEditable","float","input","e","handleChange","changeEditMode","updateIteminState","textDecoration","removeItem"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACtB;;;;;;;;;;;;;;;;;AAsBD,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,IAAN,CAAWC,GAAX,CAAe,CAACC,IAAD,EAAMC,KAAN,KAAgB;AACtB;AAACC,MAAAA,QAAQ,GAAGL,KAAK,CAACC,IAAN,CAAWG,KAAX,EAAkBE,UAAlB,GAA+B,cAA/B,GAA8C,MAAzD;AAAgE;AACjE,wBACI;AAAI,MAAA,GAAG,EAAEF,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEAJ,KAAK,CAACC,IAAN,CAAWG,KAAX,EAAkBG,UAAlB,gBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAC;AAAP,OADX;AAEI,MAAA,KAAK,EAAEC,KAFX;AAGI,MAAA,QAAQ,EAAGC,CAAD,IAAKC,YAAY,CAACD,CAAD,EAAGN,KAAH,CAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAMI;AAAQ,MAAA,KAAK,EAAE;AAACI,QAAAA,KAAK,EAAC;AAAP,OAAf;AAA+B,MAAA,OAAO,EAAE,MAAII,cAAc,CAACR,KAAD,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WANJ,eAOI;AAAQ,MAAA,KAAK,EAAE;AAACI,QAAAA,KAAK,EAAC;AAAP,OAAf;AAA+B,MAAA,OAAO,EAAE,MAAIK,iBAAiB,CAACT,KAAD,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,CADA,gBAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAO,MAAA,KAAK,EAAE;AAACI,QAAAA,KAAK,EAAC;AAAP,OAAd;AAA8B,MAAA,IAAI,EAAC,YAAnC;AAAgD,MAAA,IAAI,EAAC,UAArD;AAAgE,MAAA,QAAQ,EAAGE,CAAD,IAAMC,YAAY,CAACD,CAAD,EAAGN,KAAH,CAA5F;AAAuG,MAAA,cAAc,EAAEJ,KAAK,CAACC,IAAN,CAAWG,KAAX,EAAkBE,UAAzI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAK,MAAA,KAAK,EAAE;AAACE,QAAAA,KAAK,EAAC,MAAP;AAAcM,QAAAA,cAAc,EAACT;AAA7B,OAAZ;AAAoD,MAAA,OAAO,EAAE,MAAIO,cAAc,CAACR,KAAD,EAAOJ,KAAK,CAACC,IAAN,CAAWG,KAAX,EAAkBD,IAAzB,CAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgHH,KAAK,CAACC,IAAN,CAAWG,KAAX,EAAkBD,IAAlI,CAHJ,eAII;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,iBAAhC;AAAkD,MAAA,OAAO,EAAE,MAAIY,UAAU,CAACX,KAAD,CAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,CAZA,CADR,CADJ;AAuBU,GAzBnB,CADH,CADJ,CADF;AAgCD;;AAED,eAAeL,QAAf","sourcesContent":["import React,{useState} from 'react';\n\nfunction TodoList(props) {\n   /*  const [input,changeInput]=useState();\n    \n    function changeEditMode(i,item){\n        changeInput(item);\n        props.changeEditMode(i);\n    }\n\n    function removeItem(i){\n        props.removeItem(i);\n    }\n\n    function handleChange(e,i){\n        var target= e.target;\n        target.name === 'isComplete'? props.changeDoneStatus(target.checked,i) : changeInput(target.value);\n    }\n\n    function updateIteminState(i){\n        props.updateIteminState(input,i);\n    }\n\n    var markDone; */\n    \n  return (\n    <div>\n        <ul>\n          {props.list.map((item,index) => {\n                    {markDone = props.list[index].isComplete ? 'line-through':'none'}\n                    return (\n                        <li key={index} > \n                                <div>\n                                {\n                                props.list[index].isEditable ?\n                                <div>\n                                    <input \n                                        style={{float:'left'}} \n                                        value={input} \n                                        onChange={(e)=>handleChange(e,index)}>\n                                        </input>\n                                    <button style={{float:'left'}} onClick={()=>changeEditMode(index)}>X</button>\n                                    <button style={{float:'left'}} onClick={()=>updateIteminState(index)}>OK</button>\n                                </div>:\n                                <div>\n                                     \n                                    <input style={{float:'left'}} name=\"isComplete\" type=\"checkbox\" onChange={(e)=> handleChange(e,index)} defaultChecked={props.list[index].isComplete}></input>\n                                    <div style={{float:'left',textDecoration:markDone}} onClick={()=>changeEditMode(index,props.list[index].item)}>{props.list[index].item}</div>\n                                    <button type='button' className=\"btn btn-danger \" onClick={()=>removeItem(index)}>Delete</button>\n                                </div>\n                                }\n                                </div>\n                        </li>  \n                            )})}  \n        </ul>\n    </div>\n  );\n} \n\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}