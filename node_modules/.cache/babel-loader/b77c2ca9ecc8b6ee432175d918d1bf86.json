{"ast":null,"code":"var _jsxFileName = \"/Users/amoghbabbar/dummy/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport Header from './Header';\nimport TodoForm from './Todo/TodoForm';\nimport TodoList from './Todo/TodoList';\nimport Bucket from './Todo/Bucket';\nimport BucketList from './Todo/BucketList';\nimport './list.css';\n\nfunction App() {\n  const [state, setState] = useState({\n    bucket: [{\n      name: 'Checklist 1',\n      items: []\n    }],\n    filter: ['all'],\n    selectedBucket: 0\n  });\n\n  function addItemToState(workItem) {\n    let item = {\n      item: workItem,\n      isComplete: false,\n      isChecked: false,\n      isEditable: false\n    };\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.bucket[newState.selectedBucket].items.push(item);\n    setState(newState);\n  }\n\n  function addItemToBucket(bucketList) {\n    let bucket = {\n      name: bucketList,\n      items: []\n    };\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.bucket.push(bucket);\n    setState(newState);\n  }\n\n  function removeItemFromList(index) {\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.bucket[newState.selectedBucket].items.splice(index, 1);\n    setState(newState);\n  }\n\n  function changeEditModeinList(index) {\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.bucket[newState.selectedBucket].items[index].isEditable = !newState.bucket[newState.selectedBucket].items[index].isEditable;\n    setState(newState);\n  }\n\n  function changeEditModeinBucket(index) {\n    console.log(state.bucket[index].isRename);\n    console.log(index);\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.bucket[index].isRename = !newState.bucket[index].isRename;\n    setState(newState);\n  }\n\n  function changeIsDone(check, index) {\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.bucket[newState.selectedBucket].items[index].isComplete = check;\n    newState.bucket[newState.selectedBucket].items[index].isChecked = !newState.bucket[newState.selectedBucket].items[index].isChecked;\n    setState(newState);\n  }\n\n  function updateIteminState(item, index) {\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.bucket[newState.selectedBucket].items[index].item = item;\n    newState.bucket[newState.selectedBucket].items[index].isEditable = false;\n    setState(newState);\n  }\n\n  function updateBucketinState(item, index) {\n    console.log(state.bucket[index].isRename);\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.bucket[index].name = item;\n    newState.bucket[index].isRename = false;\n    setState(newState);\n  }\n\n  function updateListonResults(value) {\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.filter[0] = value;\n    setState(newState);\n  }\n\n  function setBucket(id) {\n    console.log(id);\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.selectedBucket = id;\n    setState(newState);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-4 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sidebar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Bucket, {\n    addtoBucket: addItemToBucket,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(BucketList, {\n    bucketId: state.selectedBucket,\n    chooseBucket: setBucket,\n    bucket: state.bucket,\n    changeEditModeinBucket: changeEditModeinBucket,\n    updateBucketinState: updateBucketinState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TodoForm, {\n    filter: state.filter[0],\n    onAdd: addItemToState,\n    passResults: updateListonResults,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TodoList, {\n    list: state.bucket[state.selectedBucket].items,\n    bucket: state.bucket,\n    bucketId: state.selectedBucket,\n    filter: state.filter[0],\n    removeItem: removeItemFromList,\n    changeDoneStatus: changeIsDone,\n    changeEditMode: changeEditModeinList,\n    updateIteminState: updateIteminState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/amoghbabbar/dummy/src/App.js"],"names":["React","useState","Header","TodoForm","TodoList","Bucket","BucketList","App","state","setState","bucket","name","items","filter","selectedBucket","addItemToState","workItem","item","isComplete","isChecked","isEditable","newState","JSON","parse","stringify","push","addItemToBucket","bucketList","removeItemFromList","index","splice","changeEditModeinList","changeEditModeinBucket","console","log","isRename","changeIsDone","check","updateIteminState","updateBucketinState","updateListonResults","value","setBucket","id"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport Header from './Header';\nimport TodoForm from './Todo/TodoForm';\nimport TodoList from './Todo/TodoList';\nimport Bucket from './Todo/Bucket';\nimport BucketList from './Todo/BucketList';\nimport './list.css';\n\n\n\nfunction App() {\n  const [state,setState]=useState(\n    {bucket:[\n      {name: 'Checklist 1',\n      items:[],\n      }\n    ],\n    filter:['all'],\n    selectedBucket:0,\n  });\n\n  function addItemToState(workItem){\n    let item = {item:workItem,isComplete:false,isChecked:false,isEditable:false};\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.bucket[newState.selectedBucket].items.push(item);\n    setState(newState);\n  }\n\n  function addItemToBucket(bucketList){\n    let bucket = {name:bucketList,items:[]};\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.bucket.push(bucket);\n    setState(newState);\n  }\n\n  function removeItemFromList(index){\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.bucket[newState.selectedBucket].items.splice(index, 1); \n    setState(newState);\n  }\n\n  function changeEditModeinList(index){\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.bucket[newState.selectedBucket].items[index].isEditable = !newState.bucket[newState.selectedBucket].items[index].isEditable;\n    setState(newState);\n  }\n\n  function changeEditModeinBucket(index){\n    console.log(state.bucket[index].isRename);\n    console.log(index);\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.bucket[index].isRename = !newState.bucket[index].isRename;\n    setState(newState);\n  }\n\n  function changeIsDone(check, index){ \n    let newState = JSON.parse(JSON.stringify(state));\n    newState.bucket[newState.selectedBucket].items[index].isComplete = check;\n    newState.bucket[newState.selectedBucket].items[index].isChecked=!newState.bucket[newState.selectedBucket].items[index].isChecked;\n    setState(newState);\n  }\n\n  function updateIteminState(item,index){\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.bucket[newState.selectedBucket].items[index].item = item;\n    newState.bucket[newState.selectedBucket].items[index].isEditable=false;\n    setState(newState);\n  }\n  \n  function updateBucketinState(item,index){\n    console.log(state.bucket[index].isRename);\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.bucket[index].name = item;\n    newState.bucket[index].isRename=false;\n    setState(newState);\n  }\n\n  function updateListonResults(value){\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.filter[0] = value;\n    setState(newState);\n  }\n\n  function setBucket(id){\n    console.log(id);\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.selectedBucket=id;\n    setState(newState);\n  }\n\n \n\n  return (\n    <div className=\"App\">\n      \n      <div className='row'>\n        <div className='col-lg-4 '>\n          <div className='sidebar'></div>\n          <div>\n          <Bucket addtoBucket={addItemToBucket}/>\n          <BucketList bucketId ={state.selectedBucket} \n                      chooseBucket={setBucket} \n                      bucket={state.bucket}\n                      changeEditModeinBucket={changeEditModeinBucket} \n                      updateBucketinState={updateBucketinState} />\n          </div>   \n        </div>\n        <div className='col-lg-8'>\n        <Header/>\n      <TodoForm filter={state.filter[0]}\n                onAdd={addItemToState}\n                passResults={updateListonResults}/>\n      <TodoList list={state.bucket[state.selectedBucket].items}\n                bucket={state.bucket}\n                bucketId ={state.selectedBucket}\n                filter={state.filter[0]} \n                removeItem={removeItemFromList} \n                changeDoneStatus ={changeIsDone}\n                changeEditMode={changeEditModeinList} \n                updateIteminState={updateIteminState} />\n                </div>\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}