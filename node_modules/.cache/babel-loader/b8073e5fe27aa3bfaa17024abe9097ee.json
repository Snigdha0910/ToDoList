{"ast":null,"code":"var _jsxFileName = \"/Users/amoghbabbar/TodoList_React/src/Todo/BucketList.js\";\nimport React, { useState } from 'react';\nimport './../list.css';\nimport { Divider, Chip, ListItemSecondaryAction, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: 'grey'\n  }\n}));\nBucketList.propTypes = {\n  chooseBucket: PropTypes.func,\n  bucket: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string,\n    items: PropTypes.arrayOf(PropTypes.shape({\n      item: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      isComplete: PropTypes.bool,\n      isChecked: PropTypes.bool,\n      isEditable: PropTypes.bool\n    }))\n  }))\n};\n\nfunction BucketList(props) {\n  const classes = useStyles();\n  var bucketId = parseInt(props.bucketId);\n  var bucketitems = props.bucket;\n  const [rename, setrename] = useState(0);\n\n  function chooseBucket(e) {\n    props.chooseBucket(e.currentTarget.dataset.id);\n  }\n\n  function changeBucket(i, val) {\n    toggle = val === 0 ? 1 : 0;\n    setrename(rename);\n    console.log(rename);\n    props.changeEditMode(i, rename);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container sidebar-form-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sidebar-form-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, bucketitems.map((item, i) => {\n    return item.reBucket[0] === 1 ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 36\n      }\n    }, \"hey\")) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 32\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      key: i,\n      \"data-id\": i,\n      value: i,\n      className: i === bucketId ? 'list-group-item active' : 'list-group-item',\n      onClick: chooseBucket,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 41\n      }\n    }, item.name, \" \"), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      onClick: () => changeBucket(i, item.reBucket[0]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 45\n      }\n    }, \"rename\"), /*#__PURE__*/React.createElement(Chip, {\n      color: \"secondary\",\n      edge: \"end\",\n      className: \"chip\",\n      label: item.items.length,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(Divider, {\n      variant: \"middle\",\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 37\n      }\n    }));\n  }))));\n}\n\nexport default BucketList;","map":{"version":3,"sources":["/Users/amoghbabbar/TodoList_React/src/Todo/BucketList.js"],"names":["React","useState","Divider","Chip","ListItemSecondaryAction","Button","makeStyles","PropTypes","useStyles","theme","root","backgroundColor","BucketList","propTypes","chooseBucket","func","bucket","arrayOf","shape","name","string","items","item","oneOfType","number","isComplete","bool","isChecked","isEditable","props","classes","bucketId","parseInt","bucketitems","rename","setrename","e","currentTarget","dataset","id","changeBucket","i","val","toggle","console","log","changeEditMode","map","reBucket","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './../list.css';\nimport {Divider,Chip,ListItemSecondaryAction,Button} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      backgroundColor:'grey',\n    },\n    }));\n\nBucketList.propTypes ={\n    chooseBucket:PropTypes.func,\n    bucket: PropTypes.arrayOf(PropTypes.shape({\n        name: PropTypes.string,\n        items:PropTypes.arrayOf(\n                PropTypes.shape({\n                item:PropTypes.oneOfType([\n                    PropTypes.string,\n                    PropTypes.number,\n                  ]),\n                isComplete:PropTypes.bool,\n                isChecked:PropTypes.bool,\n                isEditable:PropTypes.bool,\n            }),    \n        )\n    }))\n\n}    \n\nfunction BucketList(props) {\n    const classes=useStyles();\n    var bucketId = parseInt(props.bucketId);\n    var bucketitems =props.bucket;\n    const [rename,setrename]=useState(0);\n\n    function chooseBucket(e){\n        props.chooseBucket(e.currentTarget.dataset.id);\n    }\n\n    function changeBucket(i,val){\n       toggle = (val === 0) ? 1: 0; \n       setrename(rename); \n       console.log(rename); \n       props.changeEditMode(i,rename);\n    }\n\n    return(\n        <div className='row'>\n            <div className='container sidebar-form-list'>\n                <div className='sidebar-form-list'>                  \n                    { \n                        bucketitems.map((item,i)=>{ \n                            return(\n                              item.reBucket[0] === 1 ? \n                              <div><p>hey</p></div> \n                              :  \n                               <div>   \n                                    <a href='#' key={i} data-id={i} value={i} className={(i === bucketId )? 'list-group-item active' : 'list-group-item'} onClick={chooseBucket}>\n                                        <span>{item.name} </span>\n                                        <ListItemSecondaryAction>\n                                            <Button color='secondary'onClick={()=>changeBucket(i,item.reBucket[0])}>rename</Button>\n                                            <Chip color='secondary' edge='end' className='chip' label={item.items.length}></Chip>\n                                        </ListItemSecondaryAction>\n                                    </a>\n                                    <Divider variant='middle' className={classes.root} />\n                                </div>)})}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default BucketList; \n\n"]},"metadata":{},"sourceType":"module"}