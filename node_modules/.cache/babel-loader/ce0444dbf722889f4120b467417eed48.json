{"ast":null,"code":"var _jsxFileName = \"/Users/amoghbabbar/dummy/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport Header from './Header';\nimport TodoForm from './Todo/TodoForm';\nimport TodoList from './Todo/TodoList';\n\nfunction App() {\n  const [state, setState] = useState({\n    list: {\n      items: []\n    },\n    filter: ['all']\n  });\n\n  function addItemToState(workItem) {\n    let item = {\n      item: workItem,\n      isComplete: false,\n      isChecked: false,\n      isEditable: false\n    };\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.list.items.push(item);\n    setState(newState);\n  }\n\n  function removeItemFromList(index) {\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.list.items.splice(index, 1);\n    setState(newState);\n  }\n\n  function changeEditModeinList(index) {\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.list.items[index].isEditable = !newState.list.items[index].isEditable;\n    setState(newState);\n  }\n\n  function changeIsDone(check, index) {\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.list.items[index].isComplete = check;\n    newState.list.items[index].isChecked = !newState.list.items[index].isChecked;\n    setState(newState);\n  }\n\n  function updateIteminState(item, index) {\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.list.items[index].item = item;\n    newState.list.items[index].isEditable = false;\n    setState(newState);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TodoForm, {\n    filter: state.filter,\n    onAdd: addItemToState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TodoList, {\n    list: state.list.items,\n    removeItem: removeItemFromList,\n    changeDoneStatus: changeIsDone,\n    changeEditMode: changeEditModeinList,\n    updateIteminState: updateIteminState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/amoghbabbar/dummy/src/App.js"],"names":["React","useState","Header","TodoForm","TodoList","App","state","setState","list","items","filter","addItemToState","workItem","item","isComplete","isChecked","isEditable","newState","JSON","parse","stringify","push","removeItemFromList","index","splice","changeEditModeinList","changeIsDone","check","updateIteminState"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport Header from './Header';\nimport TodoForm from './Todo/TodoForm';\nimport TodoList from './Todo/TodoList';\n\n\nfunction App() {\n  const [state,setState]=useState(\n    {list:\n      {items:[]\n      },\n      filter:['all']\n    });\n\n  function addItemToState(workItem){\n    \n    let item = {item:workItem,isComplete:false,isChecked:false,isEditable:false};\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.list.items.push(item);\n    setState(newState);\n  }\n\n  function removeItemFromList(index){\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.list.items.splice(index, 1); \n    setState(newState);\n  }\n\n  function changeEditModeinList(index){\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.list.items[index].isEditable = !newState.list.items[index].isEditable;\n    setState(newState);\n  }\n\n  function changeIsDone(check, index){ \n    let newState = JSON.parse(JSON.stringify(state));\n    newState.list.items[index].isComplete = check;\n    newState.list.items[index].isChecked=!newState.list.items[index].isChecked;\n    setState(newState);\n\n  }\n\n  function updateIteminState(item,index){\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.list.items[index].item = item;\n    newState.list.items[index].isEditable=false;\n    setState(newState);\n  }\n\n  return (\n    <div className=\"App\">\n      <Header/>\n      <TodoForm filter={state.filter}\n                onAdd={addItemToState}/>\n      <TodoList list={state.list.items} \n                removeItem={removeItemFromList} \n                changeDoneStatus ={changeIsDone}\n                changeEditMode={changeEditModeinList} \n                updateIteminState={updateIteminState} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}