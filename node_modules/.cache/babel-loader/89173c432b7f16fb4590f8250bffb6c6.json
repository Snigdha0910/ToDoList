{"ast":null,"code":"var _jsxFileName = \"/Users/amoghbabbar/dummy/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport Header from './Header';\nimport TodoForm from './Todo/TodoForm';\nimport TodoList from './Todo/TodoList';\nimport Bucket from './Todo/Bucket';\nimport BucketList from './Todo/BucketList';\n\nfunction App() {\n  const [state, setState] = useState({\n    bucket: [{\n      name: 'Today Todo',\n      items: []\n    }],\n    filter: ['all'],\n    selectedBucket: 0\n  });\n\n  function addItemToState(workItem) {\n    let item = {\n      item: workItem,\n      isComplete: false,\n      isChecked: false,\n      isEditable: false\n    };\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.bucket[newState.selectedBucket].items.push(item);\n    setState(newState);\n  }\n\n  function addItemToBucket(bucketList) {\n    let bucket = {\n      name: bucketList,\n      items: [{\n        item: 'Today item',\n        isComplete: false,\n        isChecked: false,\n        isEditable: false\n      }]\n    };\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.bucket.push(bucket);\n    setState(newState);\n  }\n\n  function removeItemFromList(index) {\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.bucket[newState.selectedBucket].items.splice(index, 1);\n    setState(newState);\n  }\n\n  function changeEditModeinList(index) {\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.bucket[newState.selectedBucket].items[index].isEditable = !newState.bucket[newState.selectedBucket].items[index].isEditable;\n    setState(newState);\n  }\n\n  function changeIsDone(check, index) {\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.bucket[newState.selectedBucket].items[index].isComplete = check;\n    newState.bucket[newState.selectedBucket].items[index].isChecked = !newState.bucket[newState.selectedBucket].items[index].isChecked;\n    setState(newState);\n  }\n\n  function updateIteminState(item, index) {\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.bucket[newState.selectedBucket].items[index].item = item;\n    newState.bucket[newState.selectedBucket].items[index].isEditable = false;\n    setState(newState);\n  }\n\n  function updateListonResults(value) {\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.filter[0] = value;\n    setState(newState);\n  }\n\n  function setBucket(index) {\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.selectedBucket = index;\n    setState(newState);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Bucket, {\n    addtoBucket: addItemToBucket,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(BucketList, {\n    bucketId: state.selectedBucket,\n    chooseBucket: setBucket,\n    bucket: state.bucket,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TodoForm, {\n    filter: state.filter,\n    onAdd: addItemToState,\n    passResults: updateListonResults,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TodoList, {\n    list: state.bucket[state.selectedBucket].items,\n    filter: state.filter[0],\n    removeItem: removeItemFromList,\n    changeDoneStatus: changeIsDone,\n    changeEditMode: changeEditModeinList,\n    updateIteminState: updateIteminState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/amoghbabbar/dummy/src/App.js"],"names":["React","useState","Header","TodoForm","TodoList","Bucket","BucketList","App","state","setState","bucket","name","items","filter","selectedBucket","addItemToState","workItem","item","isComplete","isChecked","isEditable","newState","JSON","parse","stringify","push","addItemToBucket","bucketList","removeItemFromList","index","splice","changeEditModeinList","changeIsDone","check","updateIteminState","updateListonResults","value","setBucket"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport Header from './Header';\nimport TodoForm from './Todo/TodoForm';\nimport TodoList from './Todo/TodoList';\nimport Bucket from './Todo/Bucket';\nimport BucketList from './Todo/BucketList';\n\n\nfunction App() {\n  const [state,setState]=useState(\n    {bucket:[\n      {name: 'Today Todo',\n      items:[]\n      }\n    ],\n    filter:['all'],\n    selectedBucket:0,\n  });\n\n  function addItemToState(workItem){\n    let item = {item:workItem,isComplete:false,isChecked:false,isEditable:false};\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.bucket[newState.selectedBucket].items.push(item);\n    setState(newState);\n  }\n\n  function addItemToBucket(bucketList){\n    let bucket = {name:bucketList,items:[{item:'Today item',isComplete:false,isChecked:false,isEditable:false}]};\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.bucket.push(bucket);\n    setState(newState);\n  }\n\n  function removeItemFromList(index){\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.bucket[newState.selectedBucket].items.splice(index, 1); \n    setState(newState);\n  }\n\n  function changeEditModeinList(index){\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.bucket[newState.selectedBucket].items[index].isEditable = !newState.bucket[newState.selectedBucket].items[index].isEditable;\n    setState(newState);\n  }\n\n  function changeIsDone(check, index){ \n    let newState = JSON.parse(JSON.stringify(state));\n    newState.bucket[newState.selectedBucket].items[index].isComplete = check;\n    newState.bucket[newState.selectedBucket].items[index].isChecked=!newState.bucket[newState.selectedBucket].items[index].isChecked;\n    setState(newState);\n  }\n\n  function updateIteminState(item,index){\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.bucket[newState.selectedBucket].items[index].item = item;\n    newState.bucket[newState.selectedBucket].items[index].isEditable=false;\n    setState(newState);\n  }\n\n  function updateListonResults(value){\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.filter[0] = value;\n    setState(newState);\n  }\n\n  function setBucket(index){\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.selectedBucket=index;\n    setState(newState);\n  }\n\n \n\n  return (\n    <div className=\"App\">\n       <Header/>\n      <div className='row'>\n        <div className='col-sm-5'>\n          <Bucket addtoBucket={addItemToBucket}/>\n          <BucketList bucketId ={state.selectedBucket} chooseBucket={setBucket} bucket={state.bucket} />\n        </div>\n        <div className='col-sm-7'>\n      <TodoForm filter={state.filter}\n                onAdd={addItemToState}\n                passResults={updateListonResults}/>\n      <TodoList list={state.bucket[state.selectedBucket].items}\n                filter={state.filter[0]} \n                removeItem={removeItemFromList} \n                changeDoneStatus ={changeIsDone}\n                changeEditMode={changeEditModeinList} \n                updateIteminState={updateIteminState} />\n                </div>\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}