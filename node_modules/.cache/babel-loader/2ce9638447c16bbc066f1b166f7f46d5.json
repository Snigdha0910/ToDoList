{"ast":null,"code":"var _jsxFileName = \"/Users/amoghbabbar/dummy/src/Todo/TodoList.js\";\nimport React, { useState } from 'react';\n\nfunction TodoList(props) {\n  var markDone;\n  const [input, changeInput] = useState();\n\n  function changeEditMode(i, item) {\n    changeInput(item);\n    props.changeEditMode(i);\n  }\n\n  function removeItem(i) {\n    props.removeItem(i);\n  }\n\n  function handleChange(e, i) {\n    var target = e.target;\n    target.name === 'isComplete' ? props.changeDoneStatus(target.checked, i) : changeInput(target.value);\n  }\n\n  function updateIteminState(i) {\n    props.updateIteminState(input, i);\n  }\n\n  var newList = props.list;\n  var allList = props.bucket;\n  var status = props.filter;\n\n  switch (status) {\n    case 'false':\n      newList = newList.filter(list => !list.isComplete);\n      break;\n\n    case 'true':\n      newList = newList.filter(list => list.isComplete);\n      break;\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, newList.map((item, index) => {\n    {\n      markDone = item.isComplete ? 'line-through' : 'none';\n    }\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 33\n      }\n    }, newList[index].isEditable ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        float: 'left'\n      },\n      value: input,\n      onChange: e => handleChange(e, index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        float: 'left'\n      },\n      onClick: () => changeEditMode(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 37\n      }\n    }, \"X\"), /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        float: 'left'\n      },\n      onClick: () => updateIteminState(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 37\n      }\n    }, \"OK\")) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        float: 'left'\n      },\n      name: \"isComplete\",\n      type: \"checkbox\",\n      onChange: e => handleChange(e, index),\n      checked: newList[index].isChecked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        float: 'left',\n        textDecoration: markDone\n      },\n      onClick: () => changeEditMode(index, newList[index].item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 37\n      }\n    }, newList[index].item), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-danger \",\n      onClick: () => removeItem(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 37\n      }\n    }, \"Delete\"))));\n  })));\n}\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/amoghbabbar/dummy/src/Todo/TodoList.js"],"names":["React","useState","TodoList","props","markDone","input","changeInput","changeEditMode","i","item","removeItem","handleChange","e","target","name","changeDoneStatus","checked","value","updateIteminState","newList","list","allList","bucket","status","filter","isComplete","map","index","isEditable","float","isChecked","textDecoration"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\n\nfunction TodoList(props) {\n    var markDone;\n    const [input,changeInput]=useState();\n    \n    function changeEditMode(i,item){\n        changeInput(item);\n        props.changeEditMode(i);\n    }\n\n    function removeItem(i){\n        props.removeItem(i);\n    }\n\n    function handleChange(e,i){\n        var target= e.target;\n        target.name === 'isComplete'? props.changeDoneStatus(target.checked,i) : changeInput(target.value);\n    }\n\n    function updateIteminState(i){\n        props.updateIteminState(input,i);\n    }\n    var newList = props.list;\n    var allList = props.bucket;\n    var status = props.filter;\n    switch (status){\n        case 'false':\n         newList = newList.filter(list => !list.isComplete)\n         break;\n         case 'true':\n         newList = newList.filter(list => list.isComplete)\n         break;\n    };\n\n \n  return (\n    <div>\n        <ul>\n          {newList.map((item,index) => {\n                    {markDone = item.isComplete ? 'line-through':'none'}\n                    return (\n                        <li key={index}> \n                                <div>\n                                {\n                                newList[index].isEditable ?\n                                <div>\n                                    <input \n                                        style={{float:'left'}} \n                                        value={input} \n                                        onChange={(e)=>handleChange(e,index)}>\n                                        </input>\n                                    <button style={{float:'left'}} onClick={()=>changeEditMode(index)}>X</button>\n                                    <button style={{float:'left'}} onClick={()=>updateIteminState(index)}>OK</button>\n                                </div>:\n                                <div>   \n                                    <input style={{float:'left'}} name=\"isComplete\" type=\"checkbox\" onChange={(e)=> handleChange(e,index)} checked={newList[index].isChecked}></input>\n                                    <div style={{float:'left',textDecoration:markDone}} onClick={()=>changeEditMode(index,newList[index].item)}>{newList[index].item}</div>\n                                    <button type='button' className=\"btn btn-danger \" onClick={()=>removeItem(index)}>Delete</button>\n                                </div>\n                                }\n                                </div>\n                        </li>  \n                            )})}  \n        </ul>\n    </div>\n  );\n} \n\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}