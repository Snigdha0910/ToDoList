{"ast":null,"code":"var _jsxFileName = \"/Users/amoghbabbar/dummy/src/Todo/TodoList.js\";\nimport React, { useState } from 'react';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { List, ListItem, Chip, ListItemSecondaryAction, IconButton, Button, TextField, Checkbox, FormControlLabel } from '@material-ui/core';\nimport './../list.css';\nimport PropTypes from 'prop-types';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  }\n}));\nTodoList.propTypes = {\n  list: PropTypes.arrayOf(PropTypes.shape({\n    item: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    isComplete: PropTypes.bool,\n    isChecked: PropTypes.bool,\n    isEditable: PropTypes.bool\n  })),\n  bucket: PropTypes.array,\n  bucketId: PropTypes.number,\n  filter: PropTypes.string\n};\n\nfunction TodoList(props) {\n  var markDone;\n  const classes = useStyles();\n  const [input, changeInput] = useState();\n  const [count, setCount] = useState(0);\n\n  function changeEditMode(i, item) {\n    changeInput(item);\n    props.changeEditMode(i);\n  }\n\n  function removeItem(i) {\n    props.removeItem(i);\n  }\n\n  function changeStatus(check, i) {\n    setCount(count + 1);\n    props.changeDoneStatus(check, i, input);\n  }\n\n  function handleChange(e, i) {\n    e.preventDefault();\n    var target = e.target;\n    target.name === 'isComplete' ? changeStatus(target.checked, i) : changeInput(target.value);\n  }\n\n  function updateIteminState(i) {\n    props.updateIteminState(input, i);\n  }\n\n  var newList = props.list;\n  var status = props.filter;\n\n  switch (status) {\n    case 'false':\n      newList = newList.filter(list => !list.isComplete);\n      break;\n\n    case 'true':\n      newList = newList.filter(list => list.isComplete);\n      break;\n\n    default:\n      break;\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    dense: true,\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, newList.map((item, index) => {\n    // eslint-disable-next-line\n    {\n      markDone = item.isComplete ? 'line-through' : 'none';\n    }\n    return /*#__PURE__*/React.createElement(ListItem, {\n      button: true,\n      className: \"todo-list-item\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 29\n      }\n    }, item.isEditable ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      style: {\n        float: 'left'\n      },\n      value: input,\n      onChange: e => handleChange(e, index),\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      onClick: () => changeEditMode(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 37\n      }\n    }, \"X\"), /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      variant: \"outlined\",\n      style: {\n        marginLeft: '5px'\n      },\n      onClick: () => updateIteminState(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 37\n      }\n    }, \"OK\"))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        value: item.item,\n        id: \"todo-list\",\n        name: \"isComplete\",\n        onChange: e => handleChange(e, index),\n        checked: item.isChecked,\n        iconStyle: {\n          fill: 'grey'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 64\n        }\n      }),\n      label: item.item,\n      style: {\n        textDecoration: markDone\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"delete\",\n      onClick: () => removeItem(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(DeleteIcon, {\n      fontSize: \"medium\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Chip, {\n      label: 'Rename',\n      style: {\n        marginLeft: '5px'\n      },\n      onClick: () => changeEditMode(index, item.item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 37\n      }\n    })))));\n  })));\n}\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/amoghbabbar/dummy/src/Todo/TodoList.js"],"names":["React","useState","DeleteIcon","makeStyles","List","ListItem","Chip","ListItemSecondaryAction","IconButton","Button","TextField","Checkbox","FormControlLabel","PropTypes","useStyles","theme","root","width","backgroundColor","palette","background","paper","TodoList","propTypes","list","arrayOf","shape","item","oneOfType","string","number","isComplete","bool","isChecked","isEditable","bucket","array","bucketId","filter","props","markDone","classes","input","changeInput","count","setCount","changeEditMode","i","removeItem","changeStatus","check","changeDoneStatus","handleChange","e","preventDefault","target","name","checked","value","updateIteminState","newList","status","map","index","float","marginLeft","fill","textDecoration"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {List,ListItem,Chip,ListItemSecondaryAction,IconButton,Button,TextField,Checkbox,FormControlLabel} from '@material-ui/core';\nimport './../list.css';\nimport PropTypes from 'prop-types';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n      backgroundColor: theme.palette.background.paper,\n    },\n}));\n\nTodoList.propTypes = {\n    list: PropTypes.arrayOf(PropTypes.shape({\n        item:PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.number,\n          ]),\n        isComplete:PropTypes.bool,\n        isChecked:PropTypes.bool,\n        isEditable:PropTypes.bool,\n    })),\n    bucket:PropTypes.array,\n    bucketId:PropTypes.number,\n    filter: PropTypes.string,\n}\n\nfunction TodoList(props) {\n    var markDone;\n    const classes = useStyles();\n    const [input,changeInput]=useState();\n    const [count,setCount]=useState(0);\n    \n    function changeEditMode(i,item){\n        changeInput(item);\n        props.changeEditMode(i);\n    }\n\n    function removeItem(i){\n        props.removeItem(i);\n    }\n\n    function changeStatus(check,i){\n        setCount(count+1);\n        props.changeDoneStatus(check,i,input);\n    }\n\n    function handleChange(e,i){\n        e.preventDefault();\n        var target= e.target;\n        target.name === 'isComplete'? changeStatus(target.checked,i) : changeInput(target.value);\n    }\n\n    function updateIteminState(i){\n        props.updateIteminState(input,i);\n    }\n\n    var newList = props.list;\n    var status = props.filter;\n    switch (status){\n        case 'false':\n         newList = newList.filter(list => !list.isComplete)\n         break;\n         case 'true':\n         newList = newList.filter(list => list.isComplete)\n         break;\n         default:\n         break;    \n    };\n\n  return (\n    <div>\n        <List dense className={classes.root}>\n          {newList.map((item,index) => {\n              // eslint-disable-next-line\n                    {markDone = item.isComplete ? 'line-through':'none'}\n                    return (\n                        <ListItem button className='todo-list-item' key={index}> \n                            <div>\n                                {\n                                item.isEditable ?\n                                <div>\n                                    <TextField style={{float:'left'}} \n                                        value={input} \n                                        onChange={(e)=>handleChange(e,index)}\n                                        color='secondary'/>\n                                    <ListItemSecondaryAction>\n                                    <Button variant='outlined' \n                                            onClick={()=>changeEditMode(index)}>\n                                                X\n                                    </Button>\n                                    <Button color=\"secondary\" \n                                            variant=\"outlined\"  \n                                            style={{marginLeft:'5px'}} \n                                            onClick={()=>updateIteminState(index)}>\n                                                OK\n                                    </Button>\n                                    </ListItemSecondaryAction>    \n                                </div>:\n                                <div> \n                                    <FormControlLabel control={<Checkbox value={item.item}\n                                                                        id='todo-list' \n                                                                        name=\"isComplete\" \n                                                                        onChange={(e)=> handleChange(e,index)} \n                                                                        checked={item.isChecked}\n                                                                        iconStyle={{fill: 'grey'}}/>\n                                                                }\n                                                    label={item.item} style={{textDecoration:markDone}}/> \n                                    <ListItemSecondaryAction>\n                                    <IconButton aria-label=\"delete\" \n                                                onClick={()=>removeItem(index)}>\n                                        <DeleteIcon fontSize=\"medium\" />\n                                    </IconButton>\n                                    <Chip label={'Rename'} style={{marginLeft:'5px'}} onClick={()=>changeEditMode(index,item.item)}/>\n                                    </ListItemSecondaryAction>\n                                </div>\n                            }\n                    </div>\n                </ListItem>  \n            )})}  \n        </List>\n    </div>\n  );\n} \n\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}