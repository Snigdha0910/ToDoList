{"ast":null,"code":"var _jsxFileName = \"/Users/amoghbabbar/dummy/src/Todo/BucketList.js\";\n\n/* import React from 'react';\nimport './../list.css';\nimport {Divider,Chip,ListItemSecondaryAction} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      backgroundColor:'grey',\n    },\n    }));\n\n\nfunction BucketList(props) {\n    const classes=useStyles();\n    var bucketId = parseInt(props.bucketId);\n    var bucketitems =props.bucket;\n\n    function chooseBucket(e){\n        props.chooseBucket(e.currentTarget.dataset.id);\n    }\n\n    return(\n        <div className='row'>\n            <div className='container sidebar-form-list'>\n                <div className='sidebar-form-list'>\n                           \n        {\n            bucketitems.map((item,i)=>{ \n            var name ='';\n            (i === bucketId )? name = 'list-group-item active' : name='list-group-item';\n\n            return(\n                // eslint-disable-next-line\n            <>   \n            \n            <a href='#' key={i} data-id={i} value={i} className={name} onClick={chooseBucket} >\n                <span>{item.name} </span>\n                <ListItemSecondaryAction>\n            <Chip color='secondary' edge='end' className='chip' label={item.items.length}></Chip>\n            </ListItemSecondaryAction>\n            </a>\n            <Divider variant='middle' className={classes.root} />\n            </>\n            )\n        }\n            )}\n            </div>\n            </div>\n            </div>\n    )\n}\n\nexport default BucketList; */\nimport React, { useState } from 'react';\nimport './../list.css';\nimport { Divider, Chip, ListItemSecondaryAction, Button, TextField, ListItem, List } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: 'grey'\n  }\n}));\n\nfunction BucketList(props) {\n  const classes = useStyles();\n  const [bucketName, changeBucket] = useState('');\n  var bucketId = parseInt(props.bucketId); //var bucketitems =props.bucket;\n\n  function chooseBucket(e) {\n    props.chooseBucket(e.currentTarget.dataset.id);\n  }\n\n  function changeEditMode(i, item) {\n    changeBucket(item);\n    props.changeEditModeinBucket(i);\n  }\n\n  function handleChange(e) {\n    e.preventDefault();\n    changeBucket(e.target.value);\n  }\n\n  function updateBucketinState(i) {\n    props.updateBucketinState(bucketName, i);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container sidebar-form-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sidebar-form-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, props.bucket.map((item, i) => {\n    console.log(item.edit);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, item.edit ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 29\n      }\n    }, \"heyo\")\n    /* <TextField style={{float:'left'}} \n                value={bucketName} \n                onChange={(e)=>handleChange(e,i)}\n                color='secondary'/>\n    <ListItemSecondaryAction>\n            <Button variant='outlined' onClick={()=>changeEditMode(i)} >X</Button>\n            <Button color=\"secondary\" variant=\"outlined\"  onClick={()=>updateBucketinState(i)}>OK</Button>\n    </ListItemSecondaryAction>  */\n    ) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      key: i,\n      \"data-id\": i,\n      value: i,\n      className: i === bucketId ? 'list-group-item active' : 'list-group-item',\n      onClick: chooseBucket,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 33\n      }\n    }, item.name, \" \"), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Chip, {\n      edge: \"end\",\n      onClick: () => changeEditMode(i, item.name),\n      label: \"X\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Chip, {\n      color: \"secondary\",\n      edge: \"end\",\n      label: item.items.length,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 29\n      }\n    }))))), /*#__PURE__*/React.createElement(Divider, {\n      variant: \"middle\",\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }));\n  }))));\n}\n\nexport default BucketList;","map":{"version":3,"sources":["/Users/amoghbabbar/dummy/src/Todo/BucketList.js"],"names":["React","useState","Divider","Chip","ListItemSecondaryAction","Button","TextField","ListItem","List","makeStyles","useStyles","theme","root","backgroundColor","BucketList","props","classes","bucketName","changeBucket","bucketId","parseInt","chooseBucket","e","currentTarget","dataset","id","changeEditMode","i","item","changeEditModeinBucket","handleChange","preventDefault","target","value","updateBucketinState","bucket","map","console","log","edit","name","items","length"],"mappings":"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","sourcesContent":["/* import React from 'react';\nimport './../list.css';\nimport {Divider,Chip,ListItemSecondaryAction} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      backgroundColor:'grey',\n    },\n    }));\n\n\nfunction BucketList(props) {\n    const classes=useStyles();\n    var bucketId = parseInt(props.bucketId);\n    var bucketitems =props.bucket;\n\n    function chooseBucket(e){\n        props.chooseBucket(e.currentTarget.dataset.id);\n    }\n\n    return(\n        <div className='row'>\n            <div className='container sidebar-form-list'>\n                <div className='sidebar-form-list'>\n                           \n        {\n            bucketitems.map((item,i)=>{ \n            var name ='';\n            (i === bucketId )? name = 'list-group-item active' : name='list-group-item';\n\n            return(\n                // eslint-disable-next-line\n            <>   \n            \n            <a href='#' key={i} data-id={i} value={i} className={name} onClick={chooseBucket} >\n                <span>{item.name} </span>\n                <ListItemSecondaryAction>\n            <Chip color='secondary' edge='end' className='chip' label={item.items.length}></Chip>\n            </ListItemSecondaryAction>\n            </a>\n            <Divider variant='middle' className={classes.root} />\n            </>\n            )\n        }\n            )}\n            </div>\n            </div>\n            </div>\n    )\n}\n\nexport default BucketList; */\n\nimport React,{useState} from 'react';\nimport './../list.css';\nimport {Divider,Chip,ListItemSecondaryAction,Button,TextField,ListItem,List} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      backgroundColor:'grey',\n    },\n    }));\n\n\nfunction BucketList(props) {\n    const classes=useStyles();\n    const [bucketName,changeBucket]=useState('');\n    var bucketId = parseInt(props.bucketId);\n    //var bucketitems =props.bucket;\n\n    function chooseBucket(e){\n        props.chooseBucket(e.currentTarget.dataset.id);\n    }\n\n    function changeEditMode(i,item){\n        changeBucket(item);\n        props.changeEditModeinBucket(i);\n    }\n\n    function handleChange(e){\n        e.preventDefault();\n        changeBucket(e.target.value);\n    }\n\n    function updateBucketinState(i){\n        props.updateBucketinState(bucketName,i);\n    }\n\n    return(\n        <div className='row'>\n            <div className='container sidebar-form-list'>\n                <div className='sidebar-form-list'>                     \n        {\n            props.bucket.map((item,i) => { \n                console.log(item.edit);\n            return(\n                <div>\n            <div>\n            {\n                item.edit ?\n                        <div>\n                            {\n                            <TextField>heyo</TextField>\n                            /* <TextField style={{float:'left'}} \n                                        value={bucketName} \n                                        onChange={(e)=>handleChange(e,i)}\n                                        color='secondary'/>\n                            <ListItemSecondaryAction>\n                                    <Button variant='outlined' onClick={()=>changeEditMode(i)} >X</Button>\n                                    <Button color=\"secondary\" variant=\"outlined\"  onClick={()=>updateBucketinState(i)}>OK</Button>\n                            </ListItemSecondaryAction>  */ } \n                                </div> \n                                :\n                                <div>\n                                <a href='#' key={i} data-id={i} value={i} className={(i === bucketId )? 'list-group-item active' : 'list-group-item'} onClick={chooseBucket} >\n                                <span>{item.name} </span>\n                                <ListItemSecondaryAction>\n                            <Chip edge='end' onClick={()=>changeEditMode(i,item.name)} label='X'></Chip>        \n                            <Chip color='secondary' edge='end'  label={item.items.length}></Chip>\n                            </ListItemSecondaryAction>\n                            </a>\n                                </div> }    \n                                 </div> \n                                \n            <Divider variant='middle' className={classes.root} />\n            </div>\n            )\n        }\n            )}\n            </div>\n            </div>\n            </div>\n    )\n}\n\nexport default BucketList;"]},"metadata":{},"sourceType":"module"}