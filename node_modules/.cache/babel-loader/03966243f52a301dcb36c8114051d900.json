{"ast":null,"code":"var _jsxFileName = \"/Users/amoghbabbar/dummy/src/Todo/TodoForm.js\";\nimport React, { useState, useRef } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper, Tab, Tabs, Button } from '@material-ui/core';\nimport './../list.css';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  input: {\n    height: 40\n  }\n}));\n\nfunction TodoForm(props) {\n  const classes = useStyles();\n  const [todo, settodo] = useState('');\n  const textInput = useRef();\n\n  function handleChange(e) {\n    settodo(e.target.value);\n  }\n\n  function changeHandler(e, newValue) {\n    props.passResults(newValue);\n  }\n\n  function addToList(e) {\n    e.preventDefault();\n\n    if (textInput.current.value.trim() !== '') {\n      props.onAdd(todo);\n      settodo('');\n      textInput.current.focus();\n    } else {\n      textInput.current.focus();\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: addToList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    InputProps: {\n      className: classes.input\n    },\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\",\n    color: \"secondary\",\n    label: \"Add task in bucket\",\n    inputRef: textInput,\n    value: todo,\n    onChange: e => handleChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    style: {\n      marginLeft: '5px'\n    },\n    className: classes.input,\n    type: \"submit\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, \"Add\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    name: \"filterTesult\",\n    indicatorColor: \"secondary\",\n    textColor: \"secondary\",\n    centered: true,\n    value: props.filter,\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Tab, {\n    name: \"filterResult\",\n    value: \"all\",\n    label: \"All\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Tab, {\n    name: \"filterResult\",\n    value: \"false\",\n    label: \"Pending\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Tab, {\n    name: \"filterResult\",\n    value: \"true\",\n    label: \"Done\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }))))));\n}\n\nexport default TodoForm;","map":{"version":3,"sources":["/Users/amoghbabbar/dummy/src/Todo/TodoForm.js"],"names":["React","useState","useRef","TextField","makeStyles","Paper","Tab","Tabs","Button","useStyles","theme","root","flexGrow","input","height","TodoForm","props","classes","todo","settodo","textInput","handleChange","e","target","value","changeHandler","newValue","passResults","addToList","preventDefault","current","trim","onAdd","focus","className","shrink","marginLeft","filter"],"mappings":"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","sourcesContent":["import React, { useState,useRef } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper, Tab,Tabs ,Button} from '@material-ui/core';\nimport './../list.css';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n       flexGrow:1\n    },\n    input:{\n        height: 40\n    }\n  }));\n\n\nfunction TodoForm(props) {\n    const classes = useStyles();\n    const [todo,settodo]=useState('');\n    const textInput = useRef();\n\n   \n    function handleChange(e){       \n        settodo(e.target.value);\n    }\n\n    function changeHandler(e,newValue){\n        props.passResults(newValue)\n    }\n\n    function addToList(e){\n        e.preventDefault();\n        if(textInput.current.value.trim()!==''){\n            props.onAdd(todo);\n            settodo('');\n            textInput.current.focus();\n        }\n        else{\n            textInput.current.focus();\n        }\n    }\n    \n  return (\n    <div>\n         <div className='row'>\n            <div className='col-md-6'>\n                <form onSubmit={addToList}> \n                    <TextField InputProps={{className: classes.input}} \n                                InputLabelProps={{shrink: true}}\n                                variant='outlined' \n                                color='secondary'\n                                label='Add task in bucket'\n                                inputRef={textInput} \n                                value={todo} \n                                onChange={(e)=>handleChange(e)}/>\n                    <Button variant='outlined' \n                            style={{marginLeft:'5px'}}\n                            className={classes.input} \n                            type='submit'\n                            color='secondary'>Add</Button>        \n                </form>\n            </div>\n            <div className='col-md-6'>\n            <Paper className={classes.root}>\n                    <Tabs name='filterTesult'\n                          indicatorColor=\"secondary\"\n                          textColor=\"secondary\"\n                          centered\n                          value={props.filter}\n                          onChange={changeHandler}>\n                    <Tab name='filterResult' value='all' label=\"All\" />\n                    <Tab name='filterResult' value='false' label=\"Pending\" />\n                    <Tab name='filterResult' value='true' label=\"Done\" />\n                    </Tabs>\n            </Paper>\n            </div>\n        </div>\n    </div>\n  );\n}\n\nexport default TodoForm;"]},"metadata":{},"sourceType":"module"}