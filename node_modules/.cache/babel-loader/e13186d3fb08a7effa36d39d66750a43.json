{"ast":null,"code":"var _jsxFileName = \"/Users/amoghbabbar/dummy/src/Todo/TodoList.js\";\n\n/* import React,{useState} from 'react';\nimport './../list.css';\n\nfunction TodoList(props) {\n    var markDone;\n    const [input,changeInput]=useState();\n    \n    function changeEditMode(i,item){\n        changeInput(item);\n        props.changeEditMode(i);\n    }\n\n    function removeItem(i){\n        props.removeItem(i);\n    }\n\n    function handleChange(e,i){\n        var target= e.target;\n        target.name === 'isComplete'? props.changeDoneStatus(target.checked,i) : changeInput(target.value);\n    }\n\n    function updateIteminState(i){\n        props.updateIteminState(input,i);\n    }\n    var newList = props.list;\n    var status = props.filter;\n    switch (status){\n        case 'false':\n         newList = newList.filter(list => !list.isComplete)\n         break;\n         case 'true':\n         newList = newList.filter(list => list.isComplete)\n         break;\n         default:\n         break;    \n    };\n\n \n  return (\n    <div>\n        <ul className='list-group'>\n          {newList.map((item,index) => {\n              // eslint-disable-next-line\n                    {markDone = item.isComplete ? 'line-through':'none'}\n                    return (\n                        <li className='list-group-item todo-list-item' key={index}> \n                                <div>\n                                {\n                                item.isEditable ?\n                                <div>\n                                    <input \n                                        style={{float:'left'}} \n                                        value={input} \n                                        onChange={(e)=>handleChange(e,index)}>\n                                    </input>\n                                    <button style={{float:'left'}} onClick={()=>changeEditMode(index)}>X</button>\n                                    <button style={{float:'left'}} onClick={()=>updateIteminState(index)}>OK</button>\n                                </div>:\n                                <div>  \n                                    <div className='container'> \n                                    <input id='todo-list' style={{float:'left'}} name=\"isComplete\" type=\"checkbox\" onChange={(e)=> handleChange(e,index)} checked={item.isChecked}></input>\n                                    <label htmlFor='todo-list' style={{float:'left',textDecoration:markDone}} >{item.item}</label>\n                                    <button type='button' className=\"btn btn-danger \" onClick={()=>removeItem(index)}>Delete</button>\n                                    <button style={{marginLeft:'5px'}}type='button' className=\"btn btn-secondary\" onClick={()=>changeEditMode(index,item.item)}>Edit</button>\n                                </div>\n                                </div>\n                                }\n                                </div>\n                        </li>  \n                            )})}  \n        </ul>\n    </div>\n  );\n} \n\nexport default TodoList; */\nimport React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport './../list.css';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  }\n}));\n\nfunction TodoList(props) {\n  var markDone;\n  const classes = useStyles();\n  const [input, changeInput] = useState();\n\n  function changeEditMode(i, item) {\n    changeInput(item);\n    props.changeEditMode(i);\n  }\n\n  function removeItem(i) {\n    props.removeItem(i);\n  }\n\n  function handleChange(e, i) {\n    var target = e.target;\n    target.name === 'isComplete' ? props.changeDoneStatus(target.checked, i) : changeInput(target.value);\n  }\n\n  function updateIteminState(i) {\n    props.updateIteminState(input, i);\n  }\n\n  var newList = props.list;\n  var status = props.filter;\n\n  switch (status) {\n    case 'false':\n      newList = newList.filter(list => !list.isComplete);\n      break;\n\n    case 'true':\n      newList = newList.filter(list => list.isComplete);\n      break;\n\n    default:\n      break;\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    dense: true,\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, newList.map((item, index) => {\n    // eslint-disable-next-line\n    {\n      markDone = item.isComplete ? 'line-through' : 'none';\n    }\n    return /*#__PURE__*/React.createElement(ListItem, {\n      button: true,\n      className: \"list-group-item todo-list-item\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 33\n      }\n    }, item.isEditable ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        float: 'left'\n      },\n      value: input,\n      onChange: e => handleChange(e, index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      style: {\n        float: 'left'\n      },\n      onClick: () => changeEditMode(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 37\n      }\n    }, \"X\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      style: {\n        float: 'left'\n      },\n      onClick: () => updateIteminState(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 37\n      }\n    }, \"OK\")) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      id: \"todo-list\",\n      style: {\n        float: 'left'\n      },\n      name: \"isComplete\",\n      onChange: e => handleChange(e, index),\n      checked: item.isChecked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(ListItemText, {\n      htmlFor: \"todo-list\",\n      style: {\n        float: 'left',\n        textDecoration: markDone\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 37\n      }\n    }, item.item), /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"delete\",\n      onClick: () => removeItem(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(DeleteIcon, {\n      fontSize: \"medium\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      style: {\n        marginLeft: '5px'\n      },\n      onClick: () => changeEditMode(index, item.item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 37\n      }\n    }, \"Rename\"))));\n  })));\n}\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/amoghbabbar/dummy/src/Todo/TodoList.js"],"names":["React","useState","Button","IconButton","DeleteIcon","makeStyles","List","ListItem","ListItemText","Checkbox","useStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","TodoList","props","markDone","classes","input","changeInput","changeEditMode","i","item","removeItem","handleChange","e","target","name","changeDoneStatus","checked","value","updateIteminState","newList","list","status","filter","isComplete","map","index","isEditable","float","isChecked","textDecoration","marginLeft"],"mappings":"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","sourcesContent":["/* import React,{useState} from 'react';\nimport './../list.css';\n\nfunction TodoList(props) {\n    var markDone;\n    const [input,changeInput]=useState();\n    \n    function changeEditMode(i,item){\n        changeInput(item);\n        props.changeEditMode(i);\n    }\n\n    function removeItem(i){\n        props.removeItem(i);\n    }\n\n    function handleChange(e,i){\n        var target= e.target;\n        target.name === 'isComplete'? props.changeDoneStatus(target.checked,i) : changeInput(target.value);\n    }\n\n    function updateIteminState(i){\n        props.updateIteminState(input,i);\n    }\n    var newList = props.list;\n    var status = props.filter;\n    switch (status){\n        case 'false':\n         newList = newList.filter(list => !list.isComplete)\n         break;\n         case 'true':\n         newList = newList.filter(list => list.isComplete)\n         break;\n         default:\n         break;    \n    };\n\n \n  return (\n    <div>\n        <ul className='list-group'>\n          {newList.map((item,index) => {\n              // eslint-disable-next-line\n                    {markDone = item.isComplete ? 'line-through':'none'}\n                    return (\n                        <li className='list-group-item todo-list-item' key={index}> \n                                <div>\n                                {\n                                item.isEditable ?\n                                <div>\n                                    <input \n                                        style={{float:'left'}} \n                                        value={input} \n                                        onChange={(e)=>handleChange(e,index)}>\n                                    </input>\n                                    <button style={{float:'left'}} onClick={()=>changeEditMode(index)}>X</button>\n                                    <button style={{float:'left'}} onClick={()=>updateIteminState(index)}>OK</button>\n                                </div>:\n                                <div>  \n                                    <div className='container'> \n                                    <input id='todo-list' style={{float:'left'}} name=\"isComplete\" type=\"checkbox\" onChange={(e)=> handleChange(e,index)} checked={item.isChecked}></input>\n                                    <label htmlFor='todo-list' style={{float:'left',textDecoration:markDone}} >{item.item}</label>\n                                    <button type='button' className=\"btn btn-danger \" onClick={()=>removeItem(index)}>Delete</button>\n                                    <button style={{marginLeft:'5px'}}type='button' className=\"btn btn-secondary\" onClick={()=>changeEditMode(index,item.item)}>Edit</button>\n                                </div>\n                                </div>\n                                }\n                                </div>\n                        </li>  \n                            )})}  \n        </ul>\n    </div>\n  );\n} \n\nexport default TodoList; */\n\n\nimport React,{useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\n\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport './../list.css';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n    },\n  }));\n\nfunction TodoList(props) {\n    var markDone;\n    const classes = useStyles();\n    const [input,changeInput]=useState();\n    \n    function changeEditMode(i,item){\n        changeInput(item);\n        props.changeEditMode(i);\n    }\n\n    function removeItem(i){\n        props.removeItem(i);\n    }\n\n    function handleChange(e,i){\n        var target= e.target;\n        target.name === 'isComplete'? props.changeDoneStatus(target.checked,i) : changeInput(target.value);\n    }\n\n    function updateIteminState(i){\n        props.updateIteminState(input,i);\n    }\n    var newList = props.list;\n    var status = props.filter;\n    switch (status){\n        case 'false':\n         newList = newList.filter(list => !list.isComplete)\n         break;\n         case 'true':\n         newList = newList.filter(list => list.isComplete)\n         break;\n         default:\n         break;    \n    };\n\n \n  return (\n    <div>\n        <List dense className={classes.root}>\n          {newList.map((item,index) => {\n              // eslint-disable-next-line\n                    {markDone = item.isComplete ? 'line-through':'none'}\n                    return (\n                        <ListItem button className='list-group-item todo-list-item' key={index}> \n                                <div>\n                                {\n                                item.isEditable ?\n                                <div>\n                                    <input \n                                        style={{float:'left'}} \n                                        value={input} \n                                        onChange={(e)=>handleChange(e,index)}>\n                                    </input>\n                                    <Button variant=\"outlined\"  style={{float:'left'}} onClick={()=>changeEditMode(index)}>X</Button>\n                                    <Button variant=\"outlined\"  style={{float:'left'}} onClick={()=>updateIteminState(index)}>OK</Button>\n                                </div>:\n                                <div>  \n                                    <Checkbox id='todo-list' style={{float:'left'}} name=\"isComplete\" onChange={(e)=> handleChange(e,index)} checked={item.isChecked}></Checkbox>\n                                    <ListItemText htmlFor='todo-list' style={{float:'left',textDecoration:markDone}} >{item.item}</ListItemText>\n                                    <IconButton aria-label=\"delete\"  onClick={()=>removeItem(index)}>\n                                    <DeleteIcon fontSize=\"medium\" />\n                                    </IconButton>\n                                    <Button variant=\"outlined\"style={{marginLeft:'5px'}} onClick={()=>changeEditMode(index,item.item)}>Rename</Button>\n                                </div>\n                                }\n                                </div>\n                        </ListItem>  \n                            )})}  \n        </List>\n    </div>\n  );\n} \n\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}