{"ast":null,"code":"var _jsxFileName = \"/Users/amoghbabbar/TodoList_React/src/Todo/BucketList.js\";\nimport React from 'react';\nimport './../list.css';\nimport { Divider, Chip, ListItemSecondaryAction, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: 'grey'\n  }\n}));\nBucketList.propTypes = {\n  bucketId: PropTypes.number,\n  chooseBucket: PropTypes.func,\n  bucket: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string,\n    items: PropTypes.arrayOf(PropTypes.shape({\n      item: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      isComplete: PropTypes.bool,\n      isChecked: PropTypes.bool,\n      isEditable: PropTypes.bool\n    }))\n  }))\n};\n\nfunction BucketList(props) {\n  const classes = useStyles();\n  var bucketId = parseInt(props.bucketId);\n  var bucketitems = props.bucket;\n\n  function chooseBucket(e) {\n    props.chooseBucket(e.currentTarget.dataset.id);\n  }\n\n  function changeBucket(i, val) {\n    var rename;\n    rename = val === 0 ? 1 : 0;\n    console.log(rename);\n    props.changeEditMode(i, rename);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container sidebar-form-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sidebar-form-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, bucketitems.map((item, i) => {\n    return item.name === 'amogh' ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 55\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 60\n      }\n    }, \"hey\")) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      key: i,\n      \"data-id\": i,\n      value: i,\n      className: i === bucketId ? 'list-group-item active' : 'list-group-item',\n      onClick: chooseBucket,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 37\n      }\n    }, item.name, \" \"), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => changeBucket(i, item.reBucket[0]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(Chip, {\n      color: \"secondary\",\n      edge: \"end\",\n      className: \"chip\",\n      label: item.items.length,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 41\n      }\n    }))), /*#__PURE__*/React.createElement(Divider, {\n      variant: \"middle\",\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 33\n      }\n    }));\n  }))));\n}\n\nexport default BucketList;","map":{"version":3,"sources":["/Users/amoghbabbar/TodoList_React/src/Todo/BucketList.js"],"names":["React","Divider","Chip","ListItemSecondaryAction","Button","makeStyles","PropTypes","useStyles","theme","root","backgroundColor","BucketList","propTypes","bucketId","number","chooseBucket","func","bucket","arrayOf","shape","name","string","items","item","oneOfType","isComplete","bool","isChecked","isEditable","props","classes","parseInt","bucketitems","e","currentTarget","dataset","id","changeBucket","i","val","rename","console","log","changeEditMode","map","reBucket","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './../list.css';\nimport {Divider,Chip,ListItemSecondaryAction,Button} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      backgroundColor:'grey',\n    },\n    }));\n\nBucketList.propTypes ={\n    bucketId:PropTypes.number,\n    chooseBucket:PropTypes.func,\n    bucket: PropTypes.arrayOf(PropTypes.shape({\n        name: PropTypes.string,\n        items:PropTypes.arrayOf(\n                PropTypes.shape({\n                item:PropTypes.oneOfType([\n                    PropTypes.string,\n                    PropTypes.number,\n                  ]),\n                isComplete:PropTypes.bool,\n                isChecked:PropTypes.bool,\n                isEditable:PropTypes.bool,\n            }),    \n        )\n    }))\n\n}    \n\nfunction BucketList(props) {\n    const classes=useStyles();\n    var bucketId = parseInt(props.bucketId);\n    var bucketitems =props.bucket;\n\n    function chooseBucket(e){\n        props.chooseBucket(e.currentTarget.dataset.id);\n    }\n\n    function changeBucket(i,val){\n        var rename ;\n       rename = (val === 0) ? 1: 0;  \n       console.log(rename); \n       props.changeEditMode(i,rename);\n    }\n\n    return(\n        <div className='row'>\n            <div className='container sidebar-form-list'>\n                <div className='sidebar-form-list'>                  \n                    {\n                        bucketitems.map((item,i)=>{ \n                        return(\n                              item.name === 'amogh' ? <div><p>hey</p></div> :  \n                            <div>   \n                                <a href='#' key={i} data-id={i} value={i} className={(i === bucketId )? 'list-group-item active' : 'list-group-item'} onClick={chooseBucket}>\n                                    <span>{item.name} </span>\n                                    <ListItemSecondaryAction>\n                                        <Button onClick={()=>changeBucket(i,item.reBucket[0])}></Button>\n                                        <Chip color='secondary' edge='end' className='chip' label={item.items.length}></Chip>\n                                    </ListItemSecondaryAction>\n                                </a>\n                                <Divider variant='middle' className={classes.root} />\n                            </div>\n                            )\n                        }\n                    )}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default BucketList; \n\n"]},"metadata":{},"sourceType":"module"}