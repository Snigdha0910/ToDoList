{"ast":null,"code":"var _jsxFileName = \"/Users/amoghbabbar/dummy/src/Todo/TodoList.js\";\nimport React, { useState } from 'react';\n\nfunction TodoList(props) {\n  /*  const [input,changeInput]=useState();\n   \n   function changeEditMode(i,item){\n       changeInput(item);\n       props.changeEditMode(i);\n   }\n    function removeItem(i){\n       props.removeItem(i);\n   }\n    function handleChange(e,i){\n       var target= e.target;\n       target.name === 'isComplete'? props.changeDoneStatus(target.checked,i) : changeInput(target.value);\n   }\n    function updateIteminState(i){\n       props.updateIteminState(input,i);\n   }\n    var markDone; */\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, Object.keys(props.list).map((list, index) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, \"index\");\n  })));\n}\n/* {props.list.map((item,index) => {\n          {markDone = props.list[index].isComplete ? 'line-through':'none'}\n          return (\n              <li key={index} > \n                      <div>\n                      {\n                      props.list[index].isEditable ?\n                      <div>\n                          <input \n                              style={{float:'left'}} \n                              value={input} \n                              onChange={(e)=>handleChange(e,index)}>\n                              </input>\n                          <button style={{float:'left'}} onClick={()=>changeEditMode(index)}>X</button>\n                          <button style={{float:'left'}} onClick={()=>updateIteminState(index)}>OK</button>\n                      </div>:\n                      <div>\n                           \n                          <input style={{float:'left'}} name=\"isComplete\" type=\"checkbox\" onChange={(e)=> handleChange(e,index)} defaultChecked={props.list[index].isComplete}></input>\n                          <div style={{float:'left',textDecoration:markDone}} onClick={()=>changeEditMode(index,props.list[index].item)}>{props.list[index].item}</div>\n                          <button type='button' className=\"btn btn-danger \" onClick={()=>removeItem(index)}>Delete</button>\n                      </div>\n                      }\n                      </div>\n              </li>  \n                  )})}  \n</ul>\n</div>\n);\n} */\n\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/amoghbabbar/dummy/src/Todo/TodoList.js"],"names":["React","useState","TodoList","props","Object","keys","list","map","index"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACtB;;;;;;;;;;;;;;;;;AAsBD,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,MAAM,CAACC,IAAP,CAAYF,KAAK,CAACG,IAAlB,EAAwBC,GAAxB,CAA4B,CAACD,IAAD,EAAME,KAAN,KAAgB;AACzC,wBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADA;AAEH,GAHA,CADL,CADJ,CADF;AAUD;AACS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BV,eAAeN,QAAf","sourcesContent":["import React,{useState} from 'react';\n\nfunction TodoList(props) {\n   /*  const [input,changeInput]=useState();\n    \n    function changeEditMode(i,item){\n        changeInput(item);\n        props.changeEditMode(i);\n    }\n\n    function removeItem(i){\n        props.removeItem(i);\n    }\n\n    function handleChange(e,i){\n        var target= e.target;\n        target.name === 'isComplete'? props.changeDoneStatus(target.checked,i) : changeInput(target.value);\n    }\n\n    function updateIteminState(i){\n        props.updateIteminState(input,i);\n    }\n\n    var markDone; */\n    \n  return (\n    <div>\n        <ul>\n            {Object.keys(props.list).map((list,index) => {\n                return(\n                <li>index</li>)\n            })}\n        </ul>\n    </div>\n  );\n}    \n          /* {props.list.map((item,index) => {\n                    {markDone = props.list[index].isComplete ? 'line-through':'none'}\n                    return (\n                        <li key={index} > \n                                <div>\n                                {\n                                props.list[index].isEditable ?\n                                <div>\n                                    <input \n                                        style={{float:'left'}} \n                                        value={input} \n                                        onChange={(e)=>handleChange(e,index)}>\n                                        </input>\n                                    <button style={{float:'left'}} onClick={()=>changeEditMode(index)}>X</button>\n                                    <button style={{float:'left'}} onClick={()=>updateIteminState(index)}>OK</button>\n                                </div>:\n                                <div>\n                                     \n                                    <input style={{float:'left'}} name=\"isComplete\" type=\"checkbox\" onChange={(e)=> handleChange(e,index)} defaultChecked={props.list[index].isComplete}></input>\n                                    <div style={{float:'left',textDecoration:markDone}} onClick={()=>changeEditMode(index,props.list[index].item)}>{props.list[index].item}</div>\n                                    <button type='button' className=\"btn btn-danger \" onClick={()=>removeItem(index)}>Delete</button>\n                                </div>\n                                }\n                                </div>\n                        </li>  \n                            )})}  \n        </ul>\n    </div>\n  );\n} */\n\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}