{"ast":null,"code":"var _jsxFileName = \"/Users/amoghbabbar/dummy/src/Todo/TodoList.js\";\nimport React, { useState } from 'react';\n\nfunction TodoList(props) {\n  const [input, changeInput] = useState();\n\n  function changeEditMode(i, item) {\n    changeInput(item);\n    props.changeEditMode(i);\n  }\n\n  function removeItem(i) {\n    props.removeItem(i);\n  }\n\n  function handleChange(e, i) {\n    var name = e.target.getAttribute('name');\n    name === 'isComplete' ? props.changeDoneStatus(e.target.checked, i) : changeInput(e.target.value);\n  }\n\n  function updateIteminState(i) {\n    props.updateIteminState(input, i);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, Object.keys(props.list).map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 33\n      }\n    }, props.list[index].isEditable ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        float: 'left'\n      },\n      value: input,\n      onChange: e => handleChange(e, index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        float: 'left'\n      },\n      onClick: () => changeEditMode(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 37\n      }\n    }, \"X\"), /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        float: 'left'\n      },\n      onClick: () => updateIteminState(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 37\n      }\n    }, \"OK\")) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"isComplete\",\n      type: \"checkbox\",\n      onChange: e => handleChange(e, index),\n      defaultChecked: props.list[index].isComplete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        float: 'left'\n      },\n      onClick: () => changeEditMode(index, props.list[index].item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 37\n      }\n    }, props.list[index].item), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-danger \",\n      onClick: () => removeItem(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 37\n      }\n    }, \"Delete\"))));\n  })));\n}\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/amoghbabbar/dummy/src/Todo/TodoList.js"],"names":["React","useState","TodoList","props","input","changeInput","changeEditMode","i","item","removeItem","handleChange","e","name","target","getAttribute","changeDoneStatus","checked","value","updateIteminState","Object","keys","list","map","index","isEditable","float","isComplete"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\n\nfunction TodoList(props) {\n    const [input,changeInput]=useState();\n    \n    function changeEditMode(i,item){\n        changeInput(item);\n        props.changeEditMode(i);\n    }\n\n    function removeItem(i){\n        props.removeItem(i);\n    }\n\n    function handleChange(e,i){\n        var name= e.target.getAttribute('name');\n        name === 'isComplete'? props.changeDoneStatus(e.target.checked,i) : changeInput(e.target.value);\n    }\n\n    function updateIteminState(i){\n        props.updateIteminState(input,i);\n    }\n\n  return (\n    <div>\n        <ul>\n             {Object.keys(props.list).map((item,index) => {\n                    return (\n                        <li key={index} > \n                                <div>\n                                {\n                                props.list[index].isEditable ?\n                                <div>\n                                    <input \n                                        style={{float:'left'}} \n                                        value={input} \n                                        onChange={(e)=>handleChange(e,index)} \n                                        >\n                                        </input>\n                                    <button style={{float:'left'}} onClick={()=>changeEditMode(index)}>X</button>\n                                    <button style={{float:'left'}} onClick={()=>updateIteminState(index)}>OK</button>\n                                </div>:\n                                <div>\n                                    <input name=\"isComplete\" type=\"checkbox\" onChange={(e)=> handleChange(e,index)} defaultChecked={props.list[index].isComplete}></input>\n                                    <div style={{float:'left'}} onClick={()=>changeEditMode(index,props.list[index].item)}>{props.list[index].item}</div>\n                                    <button type='button' className=\"btn btn-danger \" onClick={()=>removeItem(index)}>Delete</button>\n                                </div>\n                                }\n                                </div>\n                        </li>  \n                )})}\n        </ul>\n    </div>\n  );\n}\n\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}