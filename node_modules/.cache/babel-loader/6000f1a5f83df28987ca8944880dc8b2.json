{"ast":null,"code":"var _jsxFileName = \"/Users/amoghbabbar/dummy/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport Header from './Header';\nimport SideBar from './Todo/SidebarForm';\nimport TodoForm from './Todo/TodoForm';\nimport TodoList from './Todo/TodoList';\nimport Bucket from './Todo/Bucket';\n\nfunction App() {\n  const [state, setState] = useState({\n    bucket: [{\n      name: '',\n      list: {\n        items: []\n      },\n      filter: ['all']\n    }],\n    selectedBucket: '0'\n  });\n\n  function addItemToState(workItem) {\n    let item = {\n      item: workItem,\n      isComplete: false,\n      isChecked: false,\n      isEditable: false\n    };\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.bucket.list.items.push(item);\n    setState(newState);\n  }\n\n  function addItemToBucket(bucketList) {\n    let bucket = {\n      name: bucketList,\n      items: []\n    };\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.bucket.push(bucket);\n    setState(newState);\n  }\n\n  var Catalog = {\n    name: newCatalog,\n    items: [{\n      item: 'Todo itmd #1',\n      isDone: false\n    }]\n  };\n  var newtodo = this.state.Todo.concat([Catalog]);\n  this.setState({\n    Todo: newtodo\n  });\n\n  function removeItemFromList(index) {\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.list.items.splice(index, 1);\n    setState(newState);\n  }\n\n  function changeEditModeinList(index) {\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.list.items[index].isEditable = !newState.list.items[index].isEditable;\n    setState(newState);\n  }\n\n  function changeIsDone(check, index) {\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.list.items[index].isComplete = check;\n    newState.list.items[index].isChecked = !newState.list.items[index].isChecked;\n    setState(newState);\n  }\n\n  function updateIteminState(item, index) {\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.list.items[index].item = item;\n    newState.list.items[index].isEditable = false;\n    setState(newState);\n  }\n\n  function updateListonResults(value) {\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.filter[0] = value;\n    setState(newState);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Bucket, {\n    addtoBucket: addItemToBucket,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TodoForm, {\n    filter: state.filter,\n    onAdd: addItemToState,\n    passResults: updateListonResults,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TodoList, {\n    list: state.list.items,\n    filter: state.filter[0],\n    removeItem: removeItemFromList,\n    changeDoneStatus: changeIsDone,\n    changeEditMode: changeEditModeinList,\n    updateIteminState: updateIteminState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/amoghbabbar/dummy/src/App.js"],"names":["React","useState","Header","SideBar","TodoForm","TodoList","Bucket","App","state","setState","bucket","name","list","items","filter","selectedBucket","addItemToState","workItem","item","isComplete","isChecked","isEditable","newState","JSON","parse","stringify","push","addItemToBucket","bucketList","Catalog","newCatalog","isDone","newtodo","Todo","concat","removeItemFromList","index","splice","changeEditModeinList","changeIsDone","check","updateIteminState","updateListonResults","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport Header from './Header';\nimport SideBar from './Todo/SidebarForm';\nimport TodoForm from './Todo/TodoForm';\nimport TodoList from './Todo/TodoList';\nimport Bucket from './Todo/Bucket';\n\n\nfunction App() {\n  const [state,setState]=useState(\n    {bucket:[\n      {name: '',\n        list:\n        {items:[]\n      },\n      filter:['all']}\n    ],\n    selectedBucket:'0'\n  });\n\n  function addItemToState(workItem){\n    let item = {item:workItem,isComplete:false,isChecked:false,isEditable:false};\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.bucket.list.items.push(item);\n    setState(newState);\n  }\n\n  function addItemToBucket(bucketList){\n    let bucket = {name:bucketList,items:[]};\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.bucket.push(bucket);\n    setState(newState);\n  }\n\n  \n  var Catalog = {name:newCatalog,items:[{item:'Todo itmd #1',isDone:false}]};\n    var newtodo = this.state.Todo.concat([Catalog]);\n    this.setState({\n        Todo: newtodo\n    });\n\n  function removeItemFromList(index){\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.list.items.splice(index, 1); \n    setState(newState);\n  }\n\n  function changeEditModeinList(index){\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.list.items[index].isEditable = !newState.list.items[index].isEditable;\n    setState(newState);\n  }\n\n  function changeIsDone(check, index){ \n    let newState = JSON.parse(JSON.stringify(state));\n    newState.list.items[index].isComplete = check;\n    newState.list.items[index].isChecked=!newState.list.items[index].isChecked;\n    setState(newState);\n  }\n\n  function updateIteminState(item,index){\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.list.items[index].item = item;\n    newState.list.items[index].isEditable=false;\n    setState(newState);\n  }\n\n  function updateListonResults(value){\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.filter[0] = value;\n    setState(newState);\n  }\n\n \n\n  return (\n    <div className=\"App\">\n       <Header/>\n      <div className='row'>\n        <div className='col-sm-5'>\n          <Bucket addtoBucket={addItemToBucket}/>\n        </div>\n        <div className='col-sm-7'>\n      <TodoForm filter={state.filter}\n                onAdd={addItemToState}\n                passResults={updateListonResults}/>\n      <TodoList list={state.list.items}\n                filter={state.filter[0]} \n                removeItem={removeItemFromList} \n                changeDoneStatus ={changeIsDone}\n                changeEditMode={changeEditModeinList} \n                updateIteminState={updateIteminState} />\n                </div>\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}